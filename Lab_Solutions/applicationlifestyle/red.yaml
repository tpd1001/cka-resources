apiVersion: v1
items:
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"ignition","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"ignition"}},"template":{"metadata":{"labels":{"app":"ignition"}},"spec":{"containers":[{"image":"nginx:latest","name":"ignition-nginx","ports":[{"containerPort":80}],"volumeMounts":[{"mountPath":"/usr/share/nginx/html","name":"html"}]}],"volumes":[{"name":"html","nfs":{"path":"/k1/ignition","server":"192.168.0.15"}}]}}}}
    creationTimestamp: "2021-04-29T07:34:31Z"
    generation: 1
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
            f:spec:
              f:containers:
                k:{"name":"ignition-nginx"}:
                  .: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":80,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/usr/share/nginx/html"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"html"}:
                  .: {}
                  f:name: {}
                  f:nfs:
                    .: {}
                    f:path: {}
                    f:server: {}
      manager: kubectl-client-side-apply
      operation: Update
      time: "2021-04-29T07:34:31Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      time: "2021-05-13T03:47:11Z"
    name: ignition
    namespace: default
    resourceVersion: "2253641"
    uid: 091f83ad-0921-4d63-b88f-71d3ef164c52
  spec:
    progressDeadlineSeconds: 600
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: ignition
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ignition
      spec:
        containers:
        - image: nginx:latest
          imagePullPolicy: Always
          name: ignition-nginx
          ports:
          - containerPort: 80
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/share/nginx/html
            name: html
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: html
          nfs:
            path: /k1/ignition
            server: 192.168.0.15
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2021-04-29T07:34:32Z"
      lastUpdateTime: "2021-04-29T07:34:57Z"
      message: ReplicaSet "ignition-657fbfdd99" has successfully progressed.
      reason: NewReplicaSetAvailable
      type: Progressing
    - lastTransitionTime: "2021-05-13T03:47:08Z"
      lastUpdateTime: "2021-05-13T03:47:08Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2021-05-08T10:26:09Z"
    generation: 2
    labels:
      app: red
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
            f:spec:
              f:containers:
                k:{"name":"nginx"}:
                  .: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
      manager: kubectl-create
      operation: Update
      time: "2021-05-08T10:26:09Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
      manager: kubectl-edit
      operation: Update
      time: "2021-05-08T10:54:00Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/revision: {}
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      time: "2021-05-13T03:57:09Z"
    name: red
    namespace: default
    resourceVersion: "2254604"
    uid: f3d87fbd-a273-4e72-8285-502e264e8982
  spec:
    progressDeadlineSeconds: 600
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: red
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: red
      spec:
        containers:
        - image: nginx
          imagePullPolicy: Always
          name: nginx
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    availableReplicas: 5
    conditions:
    - lastTransitionTime: "2021-05-08T10:26:09Z"
      lastUpdateTime: "2021-05-08T10:30:49Z"
      message: ReplicaSet "red-7748479b97" has successfully progressed.
      reason: NewReplicaSetAvailable
      type: Progressing
    - lastTransitionTime: "2021-05-13T03:57:07Z"
      lastUpdateTime: "2021-05-13T03:57:07Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      type: Available
    observedGeneration: 2
    readyReplicas: 5
    updatedReplicas: 5
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
